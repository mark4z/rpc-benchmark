static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 10000
      listener_filters:
        # Uncomment if Envoy is behind a load balancer that exposes client IP address using the PROXY protocol.
        # - name: envoy.filters.listener.proxy_protocol
        #   typed_config:
        #     "@type": type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol
        - name: "envoy.filters.listener.tls_inspector"
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                common_http_protocol_options:
                  max_requests_per_connection: 0
                http2_protocol_options:
                  max_concurrent_streams: 100
                  initial_stream_window_size: 65536  # 64 KiB
                  initial_connection_window_size: 1048576  # 1 MiB
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: app
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: service-http
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2,http/1.1"]
                tls_certificates:
                  - certificate_chain:
                      filename: /etc/envoy/certs/cert.pem
                    private_key:
                      filename: /etc/envoy/certs/key.pem
  clusters:
    - name: service-http
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: service-http
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: http-local
                      port_value: 8080
